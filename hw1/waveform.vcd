$version Generated by VerilatedVcd $end
$timescale 1s $end
 $scope module TOP $end
  $var wire 1 . clk $end
  $var wire 1 / finish $end
  $scope module alu_tb $end
   $var wire 1 . clk $end
   $var wire 1 / finish $end
   $var wire 32 1 DWIDTH [31:0] $end
   $var wire 4 $ op [3:0] $end
   $var wire 32 % rs1 [31:0] $end
   $var wire 32 & rs2 [31:0] $end
   $var wire 32 ' rd [31:0] $end
   $var wire 32 ( ans_rd [31:0] $end
   $var wire 1 ) zero $end
   $var wire 1 * ans_zero $end
   $var wire 1 + overflow $end
   $var wire 1 , ans_overflow $end
   $var wire 32 0 i [31:0] $end
   $var wire 32 # pattern [31:0] $end
   $var wire 32 - temp [31:0] $end
   $scope module alu $end
    $var wire 32 1 DWIDTH [31:0] $end
    $var wire 4 $ op [3:0] $end
    $var wire 32 % rs1 [31:0] $end
    $var wire 32 & rs2 [31:0] $end
    $var wire 32 ' rd [31:0] $end
    $var wire 1 ) zero $end
    $var wire 1 + overflow $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b10000000000000000000000000101100 #
b0000 $
b00000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
1)
0*
0+
0,
b00000000000000000000000000000000 -
0.
0/
b00000000000000000000000000000000 0
b00000000000000000000000000100000 1
#1
b11111111111111111111111111111111 &
b00000000000000000000000000000001 (
b00000000000000000000000000000001 -
1.
#2
0.
b00000000000000000000000000000001 0
#3
b1100 $
1.
#4
0.
b00000000000000000000000000000010 0
#5
b1001 $
b00000000000000000000000000000000 &
b00000000000000000000000000000000 (
1.
#6
0.
b00000000000000000000000000000011 0
#7
b0111 $
b00000000000000000000000000000001 &
b00000000000000000000000000000001 '
b00000000000000000000000000000001 (
0)
1.
#8
0.
b00000000000000000000000000000100 0
#9
1.
1/
